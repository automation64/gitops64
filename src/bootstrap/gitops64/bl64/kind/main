#!/usr/bin/env bash
# Template: 1.1.0
#######################################
# GitHub / Control
#
# Control script for GitHub service
#
# Author: SerDigital64 (https://github.com/serdigital64)
# Repository: https://github.com/automation64/gitops64
# Version: 1.0.0
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }

# shellcheck source=src/infrastructure/gitops64/bl64/shared/setup
source "${DEV_PATH_SRC}/infrastructure/gitops64/bl64/shared/setup" || { echo "Error: unable to load gitops64 bash lib" && exit 1; }

# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-bsh.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-xsv.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-ui.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || { echo "Error: unable to load bashlib64" && exit 1; }

#
# Functions
#

function gitops64_main_bootstrap() {
  bl64_dbg_app_show_function "@"
  local environment="$1"
  local profile="$2"

  bl64_msg_show_phase 'create kubernetes cluster'
  "${DEV_PATH_SRC}/kubernetes/kind/bl64/default/main" -e "$environment" -p "$profile" -c &&
    "${DEV_PATH_SRC}/kubernetes/kind/bl64/default/main" -e "$environment" -p "$profile" -s ||
    return $?

  bl64_msg_show_phase 'prepare remote GIT repository'
  "${DEV_PATH_SRC}/infrastructure/github/bl64/default/main" -e dev -l &&
    "${DEV_PATH_SRC}/infrastructure/github/bl64/default/main" -e dev -a ||
    return $?

  bl64_msg_show_phase 'deploy ArgoCD'
  "${DEV_PATH_SRC}/infrastructure/argocd/bl64/default/main" -e dev -p nodeport -c &&
    "${DEV_PATH_SRC}/infrastructure/argocd/bl64/default/main" -e dev -p nodeport -l &&
    "${DEV_PATH_SRC}/infrastructure/argocd/bl64/default/main" -e dev -p nodeport -k

}

function gitops64_main_destroy() {
  bl64_dbg_app_show_function "@"
  local environment="$1"
  local profile="$2"

  bl64_msg_show_phase 'destroy kubernetes cluster'
  "${DEV_PATH_SRC}/kubernetes/kind/bl64/default/main" -e "$environment" -p "$profile" -d
  return 0
}

#######################################
# Initialize environment
#
# Arguments:
#   None
# Outputs:
#   Initializacion progress messages
# Returns:
#   0: initialization ok
#   >: failed to initialize
#######################################
# Required to prevent false positive on YAML generated shell-env
# shellcheck disable=SC2154
function gitops64_main_initialize() {
  bl64_dbg_app_show_function "@"
  # shellcheck disable=SC2034
  local command="$1"
  local environment="$2"
  local profile="$3"

  # shellcheck disable=SC2015
  bl64_check_parameter 'command' &&
    bl64_check_parameter 'profile' &&
    bl64_check_parameter 'environment' ||
    { gitops64_main_help && return 1; }

  gitops64_initialize "$environment" ||
    return $?
}

#######################################
# Show script usage description
#
# Arguments:
#   None
# Outputs:
#   Command line format and description
# Returns:
#   0
#######################################
function gitops64_main_help() {
  bl64_msg_show_usage \
    '<-c|-d> -e Environment -p Profile [-V Verbose] [-D Debug] [-h]' \
    'Control script for GitHub repository' \
    '
    -c            : Bootstrap environment
    -d            : Remove environment
    ' '
    -h            : Show help
    ' '
    -e Environment: Environment name
    -p Profile    : Configuration profile
    -V Verbose    : Set verbosity level. Format: one of BL64_MSG_VERBOSE_*
    -D Debug      : Enable debugging mode. Format: one of BL64_DBG_TARGET_*
    '
}

#
# Main
#

declare gitops64_main_command="$BL64_VAR_NULL"
declare gitops64_main_debug="$BL64_DBG_TARGET_NONE"
declare gitops64_main_option=''
declare gitops64_main_verbose="$BL64_MSG_VERBOSE_APP"
declare gitops64_main_environment="$BL64_VAR_NULL"
declare gitops64_main_profile="$BL64_VAR_DEFAULT"

(($# == 0)) && gitops64_main_help && exit 1
while getopts ':cde:p:V:D:h' gitops64_main_option; do
  case "$gitops64_main_option" in
  c) gitops64_main_command='bootstrap' ;;
  d) gitops64_main_command='destroy' ;;
  e) gitops64_main_environment="$OPTARG" ;;
  p) gitops64_main_profile="$OPTARG" ;;
  V) gitops64_main_verbose="$OPTARG" ;;
  D) gitops64_main_debug="$OPTARG" ;;
  h) gitops64_main_help && exit 0 ;;
  *) gitops64_main_help && exit 1 ;;
  esac
done
bl64_dbg_set_level "$gitops64_main_debug" && bl64_msg_set_level "$gitops64_main_verbose" || exit $?
gitops64_main_initialize "$gitops64_main_command" "$gitops64_main_environment" "$gitops64_main_profile" || exit $?

bl64_msg_show_batch_start "${gitops64_main_command}"
case "$gitops64_main_command" in
'bootstrap' | 'destroy') "gitops64_main_${gitops64_main_command}" "$gitops64_main_environment" "$gitops64_main_profile" ;;
*) bl64_check_alert_parameter_invalid "$gitops64_main_command" ;;
esac
bl64_msg_show_batch_finish $? "$gitops64_main_command"
