#!/usr/bin/env bash
#######################################
# Dev / Lab / Kind / Open sandbox environment
#
# * Version: 1.0.1
#
#######################################
# Copyright [2023] [serdigital64@gmail.com]
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#######################################

#
# Imports
#

# shellcheck source=bin/dev-set
source ./bin/dev-set || { echo 'dev-set:Error: unable to load dev environment' 2>&1 && exit 1; }
# shellcheck source-path=bin
source ./bin/dev-env-kind || exit 1
# shellcheck source-path=lib/bl64
source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-txt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fmt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-fs.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-rnd.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-iam.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-module-cnt.bash" &&
  source "${DEV_LIB_BASHLIB64_TARGET}/bashlib64-core.bash" || exit 1

#
# Functions
#

function dev_lab_open() {
  bl64_dbg_app_show_function "$@"
  local dev_lab_image="$1"
  local -i status=0

  bl64_msg_show_warning "temporary opening kubeconfig path permissions (${DEV_ENV_KIND_PATH_KUBE})"
  bl64_fs_fix_permissions '0644' '0755' "${DEV_ENV_KIND_PATH_KUBE}"

  bl64_msg_show_task "open sanbox environment (${dev_lab_image})"
  bl64_cnt_run_interactive \
    --network=host \
    --entrypoint="$DEV_LAB_KIND_CONTAINER_ENTRYPOINT" \
    --workdir="$DEV_ENV_KIND_CONTAINER_PATH_ROOT" \
    --env "_DEV_LAB_KIND_CONTAINER_USER=$(bl64_iam_user_get_current)" \
    --env "DEV_PATH_TMP=/tmp" \
    --mount "type=bind,source=${DEV_PATH_SRC},target=${DEV_ENV_KIND_CONTAINER_PATH_SRC},readonly" \
    --mount "type=bind,source=${DEV_PATH_ROOT},target=${DEV_ENV_KIND_CONTAINER_PATH_ROOT},readonly" \
    --mount "type=bind,source=${DEV_PATH_VAULT},target=${DEV_ENV_KIND_CONTAINER_PATH_VAULT}" \
    --mount "type=bind,source=${DEV_ENV_KIND_PATH_KUBE},target=${DEV_ENV_KIND_CONTAINER_PATH_CREDENTIALS},readonly" \
    "${DEV_ENV_KIND_REGISTRY}/${dev_lab_image}"
  status=$?

  bl64_msg_show_task "closing kubeconfig path permissions (${DEV_ENV_KIND_PATH_KUBE})"
  bl64_fs_fix_permissions '0600' '0700' "${DEV_ENV_KIND_PATH_KUBE}"
  ((status == 0)) && status=$?
  return $status
}

function dev_lab_initialize() {
  bl64_dbg_app_show_function
  bl64_check_directory "$DEV_ENV_KIND_PATH_KUBE" &&
    bl64_cnt_setup
}

#
# Main
#

declare dev_lab_image="${1:-${DEV_LAB_KIND_IMAGE}}"

[[ -n "$DEV_CICD_DEBUG" ]] && bl64_dbg_all_enable

bl64_msg_all_enable_verbose
bl64_msg_show_batch_start 'dev-lab-kind'
dev_lab_initialize &&
  dev_lab_open "$dev_lab_image"
bl64_msg_show_batch_finish $? 'dev-lab-kind'
